{"version":3,"sources":["pages/login.js","pages/signup.js","util/auth.js","components/account.js","components/todo.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["login","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","loading","userData","email","state","password","axios","post","then","response","localStorage","setItem","data","token","history","push","catch","error","errors","nextProps","nextContent","UI","this","classes","Container","component","maxWidth","CssBaseline","className","paper","Avatar","avatar","Typography","variant","form","noValidate","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","helperText","onChange","type","Button","color","submit","onClick","disabled","CircularProgress","size","progress","Grid","container","item","Link","href","general","customError","Component","withStyles","theme","marginTop","spacing","display","flexDirection","alignItems","backgroundColor","palette","secondary","main","width","fontSize","position","signup","newUserData","firstName","lastName","phoneNumber","country","username","confirmPassword","xs","sm","pattern","justify","authMiddleWare","getItem","account","componentWillMount","authToken","defaults","headers","common","Authorization","get","console","log","userCredentials","uiLoading","status","errorMsg","handleImageChange","image","files","profilePictureHandler","form_data","FormData","append","content","window","location","reload","imageError","updateFormValues","buttonLoading","formRequest","profilePicture","rest","toolbar","uiProgress","Card","clsx","root","CardContent","details","locationText","gutterBottom","startIcon","uploadButton","Divider","md","CardActions","submitButton","flexGrow","padding","mixins","height","flexShrink","paddingLeft","buttonProperty","top","zIndex","left","marginLeft","styles","appBar","title","flex","textAlign","right","floatingButton","bottom","minWidth","bullet","transform","pos","marginBottom","dialogueStyle","viewRoot","closeButton","grey","Transition","React","forwardRef","ref","Slide","direction","todo","todos","err","body","todoId","open","buttonType","viewOpen","deleteTodoHandler","bind","handleEditClickOpen","handleViewOpen","delete","DialogTitle","children","onClose","other","disableTypography","IconButton","aria-label","DialogContent","MuiDialogContent","dayjs","extend","relativeTime","handleViewClose","handleClose","style","Dialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","userTodo","options","url","method","multiline","rows","rowsMax","map","createdAt","fromNow","substring","aria-labelledby","paperFullWidth","dividers","readonly","InputProps","disableUnderline","home","render","loadAccountPage","loadTodoPage","logoutHandler","removeItem","imageUrl","imageLoading","noWrap","Drawer","drawer","drawerPaper","src","List","ListItem","button","ListItemIcon","ListItemText","primary","createMuiTheme","light","dark","contrastText","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bc2ff28.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport axios from 'axios';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10\r\n    },\r\n    progress: {\r\n        position: 'absolute'\r\n    }\r\n});\r\n\r\nclass login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: [],\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContent) {\r\n        if(\"errors\" in nextProps.UI){\r\n            if (nextProps.UI.errors) {\r\n                this.setState({\r\n                    errors: nextProps.UI.errors\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        axios\r\n            .post('/login', userData)\r\n            .then((response) => {\r\n                localStorage.setItem('AuthToken', `Bearer ${response.data.token}`);\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errors: error.response.data,\r\n                    loading: false\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { errors, loading } = this.state;\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Login\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            helperText={errors.email}\r\n                            error={!!errors.email}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            helperText={errors.password}\r\n                            error={!!errors.password}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handleSubmit}\r\n                            disabled={loading || !this.state.email || !this.state.password}\r\n                        >\r\n                            Sign In\r\n                            {loading && <CircularProgress size={30} className={classes.progress} />}\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Link href=\"signup\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(login);","import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport axios from 'axios';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    progress: {\r\n        position: 'absolute'\r\n    }\r\n});\r\n\r\nclass signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            country: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            errors: [],\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContent) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const newUserData = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            phoneNumber: this.state.phoneNumber,\r\n            country: this.state.country,\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        };\r\n        axios\r\n            .post('/signup', newUserData)\r\n            .then((response) => {\r\n                localStorage.setItem('AuthToken', `${response.data.token}`);\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errors: error.response.data,\r\n                    loading: false\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { errors, loading } = this.state;\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    name=\"firstName\"\r\n                                    autoComplete=\"firstName\"\r\n                                    helperText={errors.firstName}\r\n                                    error={!!errors.firstName}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lastName\"\r\n                                    helperText={errors.lastName}\r\n                                    error={!!errors.lastName}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"User Name\"\r\n                                    name=\"username\"\r\n                                    autoComplete=\"username\"\r\n                                    helperText={errors.username}\r\n                                    error={!!errors.username}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"phoneNumber\"\r\n                                    label=\"Phone Number\"\r\n                                    name=\"phoneNumber\"\r\n                                    autoComplete=\"phoneNumber\"\r\n                                    pattern=\"[7-9]{1}[0-9]{9}\"\r\n                                    helperText={errors.phoneNumber}\r\n                                    error={!!errors.phoneNumber}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    helperText={errors.email}\r\n                                    error={!!errors.email}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"country\"\r\n                                    label=\"Country\"\r\n                                    name=\"country\"\r\n                                    autoComplete=\"country\"\r\n                                    helperText={errors.country}\r\n                                    error={!!errors.country}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    helperText={errors.password}\r\n                                    error={!!errors.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"confirmPassword\"\r\n                                    label=\"Confirm Password\"\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    autoComplete=\"current-password\"\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handleSubmit}\r\n                            disabled={loading ||\r\n                            !this.state.email ||\r\n                            !this.state.password ||\r\n                            !this.state.firstName ||\r\n                            !this.state.lastName ||\r\n                            !this.state.country ||\r\n                            !this.state.username ||\r\n                            !this.state.phoneNumber}\r\n                        >\r\n                            Sign Up\r\n                            {loading && <CircularProgress size={30} className={classes.progress} />}\r\n                        </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"login\" variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(signup);","export const authMiddleWare = (history) => {\r\n    const authToken = localStorage.getItem('AuthToken');\r\n    if(authToken === null){\r\n        history.push('/login')\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { Card, CardActions, CardContent, Divider, Button, Grid, TextField } from '@material-ui/core';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport axios from 'axios';\r\nimport { authMiddleWare } from '../util/auth';\r\n\r\nconst styles = (theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    root: {},\r\n    details: {\r\n        display: 'flex'\r\n    },\r\n    avatar: {\r\n        height: 110,\r\n        width: 100,\r\n        flexShrink: 0,\r\n        flexGrow: 0\r\n    },\r\n    locationText: {\r\n        paddingLeft: '15px'\r\n    },\r\n    buttonProperty: {\r\n        position: 'absolute',\r\n        top: '50%'\r\n    },\r\n    uiProgress: {\r\n        position: 'fixed',\r\n        zIndex: '1000',\r\n        height: '31px',\r\n        width: '31px',\r\n        left: '50%',\r\n        top: '35%'\r\n    },\r\n    progress: {\r\n        position: 'absolute'\r\n    },\r\n    uploadButton: {\r\n        marginLeft: '8px',\r\n        margin: theme.spacing(1)\r\n    },\r\n    customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10\r\n    },\r\n    submitButton: {\r\n        marginTop: '10px'\r\n    }\r\n});\r\n\r\nclass account extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            username: '',\r\n            country: '',\r\n            profilePicture: '',\r\n            uiLoading: true,\r\n            buttonLoading: false,\r\n            imageError: ''\r\n        };\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        authMiddleWare(this.props.history);\r\n        const authToken = localStorage.getItem('AuthToken');\r\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n        axios\r\n            .get('/user')\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    firstName: response.data.userCredentials.firstName,\r\n                    lastName: response.data.userCredentials.lastName,\r\n                    email: response.data.userCredentials.email,\r\n                    phoneNumber: response.data.userCredentials.phoneNumber,\r\n                    country: response.data.userCredentials.country,\r\n                    username: response.data.userCredentials.username,\r\n                    uiLoading: false\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 403) {\r\n                    this.props.history.push('/login');\r\n                }\r\n                console.log(error);\r\n                this.setState({ errorMsg: 'Error in retrieving the data' });\r\n            });\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleImageChange = (event) => {\r\n        this.setState({\r\n            image: event.target.files[0]\r\n        });\r\n    };\r\n\r\n    profilePictureHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            uiLoading: true\r\n        });\r\n        authMiddleWare(this.props.history);\r\n        const authToken = localStorage.getItem('AuthToken');\r\n        let form_data = new FormData();\r\n        form_data.append('image', this.state.image);\r\n        form_data.append('content', this.state.content);\r\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n        axios\r\n            .post('/user/image', form_data, {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then(() => {\r\n                window.location.reload();\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 403) {\r\n                    this.props.history.push('/login');\r\n                }\r\n                console.log(error);\r\n                this.setState({\r\n                    uiLoading: false,\r\n                    imageError: 'Error in posting the data'\r\n                });\r\n            });\r\n    };\r\n\r\n    updateFormValues = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ buttonLoading: true });\r\n        authMiddleWare(this.props.history);\r\n        const authToken = localStorage.getItem('AuthToken');\r\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n        const formRequest = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            country: this.state.country\r\n        };\r\n        axios\r\n            .post('/user', formRequest)\r\n            .then(() => {\r\n                this.setState({ buttonLoading: false });\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 403) {\r\n                    this.props.history.push('/login');\r\n                }\r\n                console.log(error);\r\n                this.setState({\r\n                    buttonLoading: false\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes, ...rest } = this.props;\r\n        if (this.state.uiLoading === true) {\r\n            return (\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgress} />}\r\n                </main>\r\n            );\r\n        } else {\r\n            return (\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    <Card {...rest} className={clsx(classes.root, classes)}>\r\n                        <CardContent>\r\n                            <div className={classes.details}>\r\n                                <div>\r\n                                    <Typography className={classes.locationText} gutterBottom variant=\"h4\">\r\n                                        {this.state.firstName} {this.state.lastName}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        size=\"small\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                        className={classes.uploadButton}\r\n                                        onClick={this.profilePictureHandler}\r\n                                    >\r\n                                        Upload Photo\r\n                                    </Button>\r\n                                    <input type=\"file\" onChange={this.handleImageChange} />\r\n\r\n                                    {this.state.imageError ? (\r\n                                        <div className={classes.customError}>\r\n                                            {' '}\r\n                                            Wrong Image Format || Supported Format are PNG and JPG\r\n                                        </div>\r\n                                    ) : (\r\n                                        false\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.progress} />\r\n                        </CardContent>\r\n                        <Divider />\r\n                    </Card>\r\n\r\n                    <br />\r\n                    <Card {...rest} className={clsx(classes.root, classes)}>\r\n                        <form autoComplete=\"off\" noValidate>\r\n                            <Divider />\r\n                            <CardContent>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"First name\"\r\n                                            margin=\"dense\"\r\n                                            name=\"firstName\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.firstName}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Last name\"\r\n                                            margin=\"dense\"\r\n                                            name=\"lastName\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.lastName}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Email\"\r\n                                            margin=\"dense\"\r\n                                            name=\"email\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={true}\r\n                                            value={this.state.email}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Phone Number\"\r\n                                            margin=\"dense\"\r\n                                            name=\"phone\"\r\n                                            type=\"number\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={true}\r\n                                            value={this.state.phoneNumber}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"User Name\"\r\n                                            margin=\"dense\"\r\n                                            name=\"userHandle\"\r\n                                            disabled={true}\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.username}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Country\"\r\n                                            margin=\"dense\"\r\n                                            name=\"country\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.country}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                            <Divider />\r\n                            <CardActions />\r\n                        </form>\r\n                    </Card>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        className={classes.submitButton}\r\n                        onClick={this.updateFormValues}\r\n                        disabled={\r\n                            this.state.buttonLoading ||\r\n                            !this.state.firstName ||\r\n                            !this.state.lastName ||\r\n                            !this.state.country\r\n                        }\r\n                    >\r\n                        Save details\r\n                        {this.state.buttonLoading && <CircularProgress size={30} className={classes.progress} />}\r\n                    </Button>\r\n                </main>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(account);","import React, { Component } from 'react';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { authMiddleWare } from '../util/auth';\r\n\r\nconst styles = (theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n    appBar: {\r\n        position: 'relative'\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1\r\n    },\r\n    submitButton: {\r\n        display: 'block',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        position: 'absolute',\r\n        top: 14,\r\n        right: 10\r\n    },\r\n    floatingButton: {\r\n        position: 'fixed',\r\n        bottom: 0,\r\n        right: 0\r\n    },\r\n    form: {\r\n        width: '98%',\r\n        marginLeft: 13,\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    root: {\r\n        minWidth: 470\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)'\r\n    },\r\n    pos: {\r\n        marginBottom: 12\r\n    },\r\n    uiProgress: {\r\n        position: 'fixed',\r\n        zIndex: '1000',\r\n        height: '31px',\r\n        width: '31px',\r\n        left: '50%',\r\n        top: '35%'\r\n    },\r\n    dialogueStyle: {\r\n        maxWidth: '50%'\r\n    },\r\n    viewRoot: {\r\n        margin: 0,\r\n        padding: theme.spacing(2)\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500]\r\n    }\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            todos: '',\r\n            title: '',\r\n            body: '',\r\n            todoId: '',\r\n            errors: [],\r\n            open: false,\r\n            uiLoading: true,\r\n            buttonType: '',\r\n            viewOpen: false\r\n        };\r\n\r\n        this.deleteTodoHandler = this.deleteTodoHandler.bind(this);\r\n        this.handleEditClickOpen = this.handleEditClickOpen.bind(this);\r\n        this.handleViewOpen = this.handleViewOpen.bind(this);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    componentWillMount = () => {\r\n        authMiddleWare(this.props.history);\r\n        const authToken = localStorage.getItem('AuthToken');\r\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n        axios\r\n            .get('/todos')\r\n            .then((response) => {\r\n                this.setState({\r\n                    todos: response.data,\r\n                    uiLoading: false\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    deleteTodoHandler(data) {\r\n        authMiddleWare(this.props.history);\r\n        const authToken = localStorage.getItem('AuthToken');\r\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n        let todoId = data.todo.todoId;\r\n        axios\r\n            .delete(`todo/${todoId}`)\r\n            .then(() => {\r\n                window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    handleEditClickOpen(data) {\r\n        this.setState({\r\n            title: data.todo.title,\r\n            body: data.todo.body,\r\n            todoId: data.todo.todoId,\r\n            buttonType: 'Edit',\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleViewOpen(data) {\r\n        this.setState({\r\n            title: data.todo.title,\r\n            body: data.todo.body,\r\n            viewOpen: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const DialogTitle = withStyles(styles)((props) => {\r\n            const { children, classes, onClose, ...other } = props;\r\n            return (\r\n                <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n                    <Typography variant=\"h6\">{children}</Typography>\r\n                    {onClose ? (\r\n                        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    ) : null}\r\n                </MuiDialogTitle>\r\n            );\r\n        });\r\n\r\n        const DialogContent = withStyles((theme) => ({\r\n            viewRoot: {\r\n                padding: theme.spacing(2)\r\n            }\r\n        }))(MuiDialogContent);\r\n\r\n        dayjs.extend(relativeTime);\r\n        const { classes } = this.props;\r\n        const { open, errors, viewOpen } = this.state;\r\n\r\n        const handleClickOpen = () => {\r\n            this.setState({\r\n                todoId: '',\r\n                title: '',\r\n                body: '',\r\n                buttonType: '',\r\n                open: true\r\n            });\r\n        };\r\n\r\n        const handleSubmit = (event) => {\r\n            authMiddleWare(this.props.history);\r\n            event.preventDefault();\r\n            const userTodo = {\r\n                title: this.state.title,\r\n                body: this.state.body\r\n            };\r\n            let options = {};\r\n            if (this.state.buttonType === 'Edit') {\r\n                options = {\r\n                    url: `/todo/${this.state.todoId}`,\r\n                    method: 'put',\r\n                    data: userTodo\r\n                };\r\n            } else {\r\n                options = {\r\n                    url: '/todo',\r\n                    method: 'post',\r\n                    data: userTodo\r\n                };\r\n            }\r\n            const authToken = localStorage.getItem('AuthToken');\r\n            axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n            axios(options)\r\n                .then(() => {\r\n                    this.setState({ open: false });\r\n                    window.location.reload();\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({ open: true, errors: error.response.data });\r\n                    console.log(error);\r\n                });\r\n        };\r\n\r\n        const handleViewClose = () => {\r\n            this.setState({ viewOpen: false });\r\n        };\r\n\r\n        const handleClose = (event) => {\r\n            this.setState({ open: false });\r\n        };\r\n\r\n        if (this.state.uiLoading === true) {\r\n            return (\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgress} />}\r\n                </main>\r\n            );\r\n        } else {\r\n            return (\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n\r\n                    <IconButton\r\n                        className={classes.floatingButton}\r\n                        color=\"primary\"\r\n                        aria-label=\"Add Todo\"\r\n                        onClick={handleClickOpen}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 60 }} />\r\n                    </IconButton>\r\n                    <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                        <AppBar className={classes.appBar}>\r\n                            <Toolbar>\r\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    {this.state.buttonType === 'Edit' ? 'Edit Todo' : 'Create a new Todo'}\r\n                                </Typography>\r\n                                <Button\r\n                                    autoFocus\r\n                                    color=\"inherit\"\r\n                                    onClick={handleSubmit}\r\n                                    className={classes.submitButton}\r\n                                >\r\n                                    {this.state.buttonType === 'Edit' ? 'Save' : 'Submit'}\r\n                                </Button>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n\r\n                        <form className={classes.form} noValidate>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"todoTitle\"\r\n                                        label=\"Todo Title\"\r\n                                        name=\"title\"\r\n                                        autoComplete=\"todoTitle\"\r\n                                        helperText={errors.title}\r\n                                        value={this.state.title}\r\n                                        error={!!errors.title}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"todoDetails\"\r\n                                        label=\"Todo Details\"\r\n                                        name=\"body\"\r\n                                        autoComplete=\"todoDetails\"\r\n                                        multiline\r\n                                        rows={25}\r\n                                        rowsMax={25}\r\n                                        helperText={errors.body}\r\n                                        error={!!errors.body}\r\n                                        onChange={this.handleChange}\r\n                                        value={this.state.body}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Dialog>\r\n\r\n                    <Grid container spacing={2}>\r\n                        {this.state.todos.map((todo) => (\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Card className={classes.root} variant=\"outlined\">\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                            {todo.title}\r\n                                        </Typography>\r\n                                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                                            {dayjs(todo.createdAt).fromNow()}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {`${todo.body.substring(0, 65)}`}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        <Button size=\"small\" color=\"primary\" onClick={() => this.handleViewOpen({ todo })}>\r\n                                            {' '}\r\n                                            View{' '}\r\n                                        </Button>\r\n                                        <Button size=\"small\" color=\"primary\" onClick={() => this.handleEditClickOpen({ todo })}>\r\n                                            Edit\r\n                                        </Button>\r\n                                        <Button size=\"small\" color=\"primary\" onClick={() => this.deleteTodoHandler({ todo })}>\r\n                                            Delete\r\n                                        </Button>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n\r\n                    <Dialog\r\n                        onClose={handleViewClose}\r\n                        aria-labelledby=\"customized-dialog-title\"\r\n                        open={viewOpen}\r\n                        fullWidth\r\n                        classes={{ paperFullWidth: classes.dialogueStyle }}\r\n                    >\r\n                        <DialogTitle id=\"customized-dialog-title\" onClose={handleViewClose}>\r\n                            {this.state.title}\r\n                        </DialogTitle>\r\n                        <DialogContent dividers>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"todoDetails\"\r\n                                name=\"body\"\r\n                                multiline\r\n                                readonly\r\n                                rows={1}\r\n                                rowsMax={25}\r\n                                value={this.state.body}\r\n                                InputProps={{\r\n                                    disableUnderline: true\r\n                                }}\r\n                            />\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </main>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(todo);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Account from '../components/account';\r\nimport Todo from '../components/todo';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { authMiddleWare } from '../util/auth';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n    avatar: {\r\n        height: 110,\r\n        width: 100,\r\n        flexShrink: 0,\r\n        flexGrow: 0,\r\n        marginTop: 20\r\n    },\r\n    uiProgress: {\r\n        position: 'fixed',\r\n        zIndex: '1000',\r\n        height: '31px',\r\n        width: '31px',\r\n        left: '45%',\r\n        top: '35%'\r\n    },\r\n    toolbar: theme.mixins.toolbar\r\n});\r\n\r\nclass home extends Component {\r\n    state = {\r\n        render: false\r\n    };\r\n\r\n    loadAccountPage = (event) => {\r\n        this.setState({ render: true });\r\n    };\r\n\r\n    loadTodoPage = (event) => {\r\n        this.setState({ render: false });\r\n    };\r\n\r\n    logoutHandler = (event) => {\r\n        localStorage.removeItem('AuthToken');\r\n        this.props.history.push('/login');\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            profilePicture: '',\r\n            uiLoading: true,\r\n            imageLoading: false\r\n        };\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        authMiddleWare(this.props.history);\r\n        const authToken = localStorage.getItem('AuthToken');\r\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n        axios\r\n            .get('/user')\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    firstName: response.data.userCredentials.firstName,\r\n                    lastName: response.data.userCredentials.lastName,\r\n                    email: response.data.userCredentials.email,\r\n                    phoneNumber: response.data.userCredentials.phoneNumber,\r\n                    country: response.data.userCredentials.country,\r\n                    username: response.data.userCredentials.username,\r\n                    uiLoading: false,\r\n                    profilePicture: response.data.userCredentials.imageUrl\r\n                });\r\n            })\r\n            .catch((error) => {\r\n            if (error.response.status === 403) {\r\n                this.props.history.push('/login');\r\n            }\r\n            console.log(error);\r\n            this.setState({ errorMsg: 'Error in retrieving the data' });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.state.uiLoading === true) {\r\n            return (\r\n                <div className={classes.root}>\r\n                    {this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgress} />}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className={classes.root}>\r\n                    <CssBaseline />\r\n                    <AppBar position=\"fixed\" className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" noWrap>\r\n                                TodoApp\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"permanent\"\r\n                        classes={{\r\n                            paper: classes.drawerPaper\r\n                        }}\r\n                    >\r\n                        <div className={classes.toolbar} />\r\n                        <Divider />\r\n                        <center>\r\n                            <Avatar src={this.state.profilePicture} className={classes.avatar} />\r\n                            <p>\r\n                                {' '}\r\n                                {this.state.firstName} {this.state.lastName}\r\n                            </p>\r\n                        </center>\r\n                        <Divider />\r\n                        <List>\r\n                            <ListItem button key=\"Todo\" onClick={this.loadTodoPage}>\r\n                                <ListItemIcon>\r\n                                    {' '}\r\n                                    <NotesIcon />{' '}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Todo\" />\r\n                            </ListItem>\r\n\r\n                            <ListItem button key=\"Account\" onClick={this.loadAccountPage}>\r\n                                <ListItemIcon>\r\n                                    {' '}\r\n                                    <AccountBoxIcon />{' '}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Account\" />\r\n                            </ListItem>\r\n\r\n                            <ListItem button key=\"Logout\" onClick={this.logoutHandler}>\r\n                                <ListItemIcon>\r\n                                    {' '}\r\n                                    <ExitToAppIcon />{' '}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Logout\" />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n\r\n                    <div>{this.state.render ? <Account /> : <Todo />}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(home);","\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\n\r\nimport login from './pages/login';\r\nimport signup from './pages/signup';\r\nimport home from './pages/home';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#33c9dc',\r\n            main: '#FF5722',\r\n            dark: '#d50000',\r\n            contrastText: '#fff'\r\n        }\r\n    }\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={home} />\r\n                        <Route exact path=\"/login\" component={login} />\r\n                        <Route exact path=\"/signup\" component={signup} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </MuiThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}